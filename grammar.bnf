


(* dump a little hacky of the old file
float = 'none' | 'right' | 'left'
border-bottom = '[border-style]' | '[border-color]'
border-image-repeat = 'stretch' | 'space' | 'round' | 'repeat'
flex-flow = '[flex-wrap]'
min-width = '0' | 'auto' | '<percentage>' | '<length>'
list-style-position = 'outside' | 'inside'
text-align-last = 'auto' | 'start' | 'right' | 'left' | 'justify' | 'end' | 'center'
overflow-wrap = 'normal' | 'break-word'
column-fill = 'balance' | 'auto'
border-top-color = '<currentColor>' | 'transparent' | '<color>'
line-height = 'normal' | 'none' | '<percentage>' | '<number>' | '<length>'
text-orientation = 'mixed' | 'use-glyph-orientation' | 'upright' | 'sideways-right' | 'sideways-left' | 'sideways'
text-emphasis-style = 'none' | 'triangle' | 'sesame' | 'open' | 'filled' | 'double-circle' | 'dot' | 'circle' | '<string>'
width = 'auto' | '<percentage>' | '<length>'
background-position = '0% 0%' | 'right bottom' | 'left top' | 'center center' | '<percentage> <length>'
border-image-slice = '100%' | '[ Up to four space-separated <number> or <percentage> values' | 'the optional 'fill' keyword can be included after the other values are declared ]'
right = 'auto' | '<percentage>' | '<length>'
border-image-source = 'none' | 'url(path/file.png)'
border-width = 'medium' | 'thin' | 'thick' | '<length>'
padding-bottom = '0' | '<percentage>' | '<length>'
max-width = 'none' | '<percentage>' | '<length>'
border-left = '[border-style]' | '[border-color]'
background-attachment = 'scroll' | 'local' | 'fixed'
top = 'auto' | '<percentage>' | '<length>'
transition-duration = '0s' | '<time>'
transition-property = 'all' | 'none' | '[ A comma-separated list of property names ]'
border-color = '<currentColor>' | 'transparent' | '<color>'
counter-increment = 'none' | '<identifier> <integer>'
background-repeat = 'repeat' | 'space' | 'round' | 'repeat-y' | 'repeat-x' | 'repeat no-repeat' | 'no-repeat'
column-width = 'auto' | '<length>'
justify-content = 'flex-start' | 'space-between' | 'space-around' | 'flex-end' | 'center'
border-left-style = 'none' | 'solid' | 'ridge' | 'outset' | 'inset' | 'hidden' | 'groove' | 'double' | 'dotted' | 'dashed'
column-gap = 'normal' | '<length>'
font-family = '<family-name>'
columns = '[column-count]'
height = 'auto' | '<percentage>' | '<length>'
margin = '[margin-right]' | '[margin-bottom]' | '[margin-left]'
page-break-after = 'auto' | 'right' | 'left' | 'avoid' | 'always'
outline-color = 'invert' | '<color>'
overflow-y = 'visible' | 'scroll' | 'hidden' | 'auto'
outline-width = 'medium' | 'thin' | 'thick' | '<length>'
clip = 'auto' | 'rect(<length>'
text-emphasis-color = '<currentColor>' | '<color>'
line-break = 'auto' | 'strict' | 'normal' | 'loose'
transform-origin = '50% 50%' | 'top' | 'right' | 'left' | 'center' | 'bottom' | '<percentage>' | '<length>'
backface-visibility = 'visible' | 'hidden'
margin-right = '0' | 'auto' | '<percentage>' | '<length>'
counter-reset = 'none' | '<identifier> <integer>'
column-rule = '[column-rule-style]' | '[column-rule-color]'
border = '[border-style]' | '[border-color]'
text-transform = 'none' | 'uppercase' | 'lowercase' | 'full-width' | 'capitalize'
vertical-align = 'baseline' | 'top' | 'text-top' | 'text-bottom' | 'super' | 'sub' | 'middle' | 'bottom' | '<percentage>' | '<length>'
align-items = 'stretch' | 'flex-start' | 'flex-end' | 'center' | 'baseline'
word-break = 'normal' | 'keep-all' | 'break-all'
break-inside = 'auto' | 'avoid-page' | 'avoid-column' | 'avoid'
font-variant-caps = 'normal' | 'unicase' | 'titling-caps' | 'small-caps' | 'petite-caps' | 'all-small-caps' | 'all-petite-caps'
padding = '[padding-right]' | '[padding-bottom]' | '[padding-left]'
animation-play-state = 'running' | 'paused'
writing-mode = 'horizontal-tb' | 'vertical-rl' | 'vertical-lr'
flex-shrink = '1' | '<number>'
outline-offset = '0' | '<length>'
border-collapse = 'separate' | 'collapse'
flex-direction = 'row' | 'row-reverse' | 'column-reverse' | 'column'
font-kerning = 'auto' | 'normal' | 'none'
text-align = 'start end' | 'start' | 'right' | 'match-parent' | 'left' | 'justify' | 'end' | 'center' | '<string>'
text-indent = '0' | '<percentage>' | '<length> hanging each-line' | '<length> hanging' | '<length> each-line' | '<length>'
transform = 'none' | 'translateZ(<length>)' | 'translateY(<translation-value>)' | 'translateX(<translation-value>)' | 'translate3d(<translation-value>'
white-space = 'normal' | 'pre-wrap' | 'pre-line' | 'pre' | 'nowrap'
border-right = '[border-style]' | '[border-color]'
text-decoration-color = '<currentColor>' | '<color>'
background-origin = 'padding-box' | 'content-box' | 'border-box'
border-top-width = 'medium' | 'thin' | 'thick' | '<length>'
column-rule-width = 'medium' | 'thin' | 'thick' | '<length>'
border-right-color = '<currentColor>' | 'transparent' | '<color>'
outline = '[outline-style]' | '[outline-width]'
text-justify = 'auto' | 'none' | 'inter-word' | 'distribute'
word-spacing = 'normal' | '<percentage>' | '<length>'
quotes = 'none' | '<string> <string>'
column-count = 'auto' | '<integer>'
border-style = 'none' | 'solid' | 'ridge' | 'outset' | 'inset' | 'hidden' | 'groove' | 'double' | 'dotted' | 'dashed'
visibility = 'visible' | 'hidden' | 'collapse'
border-right-width = 'medium' | 'thin' | 'thick' | '<length>'
border-bottom-right-radius = '0' | '<percentage>' | '<length>'
align-self = 'auto' | 'stretch' | 'flex-start' | 'flex-end' | 'center' | 'baseline'
page-break-before = 'auto' | 'right' | 'left' | 'avoid' | 'always'
position = 'static' | 'sticky' | 'relative' | 'page' | 'fixed' | 'center' | 'absolute'
column-span = 'none' | 'all'
transition-timing-function = 'ease' | 'steps(<integer>'
animation-iteration-count = '1' | 'infinite' | '<number>'
column-rule-color = '[ Initial value depends on the user agent ]' | '<color>'
animation-direction = 'normal' | 'reverse' | 'alternate-reverse' | 'alternate'
animation = '[animation-duration]' | '[animation-timing-function]' | '[animation-delay]' | '[animation-iteration-count]' | '[animation-direction]' | '[animation-fill-mode]' | '[animation-play-state]'
margin-top = '0' | 'auto' | '<percentage>' | '<length>'
animation-name = 'none' | '[ custom identifier ]'
border-bottom-left-radius = '0' | '<percentage>' | '<length>'
border-top = '[border-style]' | '[border-color]'
text-combine-horizontal = 'none' | 'digits <integer>' | 'all'
border-bottom-color = '<currentColor>' | 'transparent' | '<color>'
hanging-punctuation = 'none' | 'last force-end' | 'last allow-end' | 'last' | 'force-end' | 'first force-end' | 'first allow-end' | 'first' | 'allow-end'
text-decoration-skip = 'none' | 'spaces' | 'objects' | 'ink' | 'edges' | 'box-decoration' | 'box-decoration'
object-fit = 'fill' | 'scale-down' | 'none' | 'cover' | 'contain'
list-style-type = 'disc' | 'upper-roman' | 'upper-latin' | 'upper-alpha' | 'square' | 'none' | 'lower-roman' | 'lower-latin' | 'lower-greek' | 'lower-alpha' | 'georgian' | 'decimal-leading-zero' | 'decimal' | 'circle' | 'armenian'
z-index = 'auto' | '<integer>'
flex-wrap = 'nowrap' | 'wrap-reverse' | 'wrap'
direction = 'ltr' | 'rtl'
text-overflow = 'clip' | 'ellipsis' | '<string>'
border-top-right-radius = '0' | '<percentage>' | '<length>'
min-height = '0' | 'auto' | '<percentage>' | '<length>'
flex-grow = '0' | '<number>'
unicode-bidi = 'normal' | 'embed' | 'bidi-override'
word-wrap = 'normal' | 'break-word'
align-content = 'stretch' | 'space-between' | 'space-around' | 'flex-start' | 'flex-end' | 'center'
border-bottom-style = 'none' | 'solid' | 'ridge' | 'outset' | 'inset' | 'hidden' | 'groove' | 'double' | 'dotted' | 'dashed'
margin-bottom = '0' | 'auto' | '<percentage>' | '<length>'
cursor = 'auto' | 'zoom-out' | 'zoom-in' | 'wait' | 'w-resize' | 'vertical-text' | 'url(path/file.png)' | 'text' | 'sw-resize' | 'se-resize' | 's-resize' | 'row-resize' | 'progress' | 'pointer' | 'nwse-resize' | 'nw-resize' | 'ns-resize' | 'not-allowed' | 'none' | 'no-drop' | 'nesw-resize' | 'ne-resize' | 'n-resize' | 'move' | 'help' | 'ew-resize' | 'e-resize' | 'default' | 'crosshair' | 'copy' | 'context-menu' | 'col-resize' | 'cell' | 'all-scroll' | 'alias'
border-left-color = '<currentColor>' | 'transparent' | '<color>'
font-weight = 'normal' | 'lighter' | 'bolder' | 'bold' | '900' | '800' | '700' | '600' | '500' | '400' | '300' | '200' | '100'
image-resolution = '1dppx' | 'from-image'
break-before = 'auto' | 'right' | 'page' | 'left' | 'column' | 'avoid-page' | 'avoid-column' | 'avoid' | 'always'
background-clip = 'border-box' | 'padding-box' | 'content-box'
border-right-style = 'none' | 'solid' | 'ridge' | 'outset' | 'inset' | 'hidden' | 'groove' | 'double' | 'dotted' | 'dashed'
content = 'normal' | 'open-quote' | 'none' | 'no-open-quote' | 'no-close-quote' | 'icon' | 'close-quote' | 'attr(<identifier>' | '<url>' | '<string>' | '<counter>'
list-style-image = 'none' | '<url>'
background-size = 'auto' | 'cover' | 'contain' | 'auto <percentage>' | '<percentage> <length>' | '<percentage>' | '<length> auto' | '<length> <percentage>' | '<length>'
object-position = '50% 50%' | 'right bottom' | 'left top' | 'center center' | '<percentage> <length>'
font = '[font-variant]' | '[font-weight]' | '[font-stretch]' | '[font-size]' | '/' | '[line-height]' | '[font-family]'
page-break-inside = 'auto' | 'avoid'
border-bottom-width = 'medium' | 'thin' | 'thick' | '<length>'
text-decoration = '[text-decoration-style]' | '[text-decoration-color]'
outline-style = 'none' | 'solid' | 'ridge' | 'outset' | 'inset' | 'groove' | 'double' | 'dotted' | 'dashed' | 'auto'
order = '0' | '<integer>'
font-size-adjust = 'none' | '<number>'
animation-fill-mode = 'none' | 'forwards' | 'both' | 'backwards'
box-shadow = 'none' | '<length> <length> <length> <length> <color> inset'
overflow = 'visible' | 'scroll' | 'hidden' | 'auto'
overflow-x = 'visible' | 'scroll' | 'hidden' | 'auto'
margin-left = '0' | 'auto' | '<percentage>' | '<length>'
font-size = 'medium' | 'xx-small' | 'xx-large' | 'x-small' | 'x-large' | 'smaller' | 'small' | 'larger' | 'large' | '<percentage>' | '<length>'
empty-cells = 'show' | 'hide'
text-decoration-line = 'none' | 'underline' | 'overline' | 'line-through' | 'blink'
background-color = 'transparent' | '<color>'
clear-after = 'none' | 'top' | 'start' | 'right' | 'outside' | 'left' | 'inside' | 'end' | 'descendants' | 'bottom' | 'both'
padding-right = '0' | '<percentage>' | '<length>'
letter-spacing = 'normal' | '<length>'
border-radius = '0' | '<percentage>' | '<length> <length> <length> <length>' | '<length> / <percentage>' | '<length>'
box-sizing = 'content-box' | 'padding-box' | 'border-box'
widows = '2' | '<integer>'
image-orientation = '0deg' | '<angle>'
perspective = 'none' | '<length>'
border-spacing = '0' | '<length> <length>' | '<length>'
display = 'inline' | 'table-row-group' | 'table-row' | 'table-header-group' | 'table-footer-group' | 'table-column-group' | 'table-column' | 'table-cell' | 'table-caption' | 'table' | 'run-in' | 'run-in' | 'none' | 'list-item' | 'inline-table' | 'inline-flex' | 'inline-block' | 'flex' | 'container' | 'compact' | 'block'
break-after = 'auto' | 'right' | 'page' | 'left' | 'column' | 'avoid-page' | 'avoid-column' | 'avoid' | 'always'
font-style = 'normal' | 'oblique' | 'italic'
bottom = 'auto' | '<percentage>' | '<length>'
animation-timing-function = 'ease' | 'steps(<integer>'
all = 'initial' | 'unset' | 'inherit'
text-decoration-style = 'solid' | 'wavy' | 'double' | 'dotted' | 'dashed'
perspective-origin = '50% 50%' | 'top' | 'right' | 'left' | 'center' | 'bottom' | '<percentage>' | '<length>'
resize = 'none' | 'vertical' | 'horizontal' | 'both'
clear = 'none' | 'right' | 'left' | 'both'
font-synthesis = 'weight style' | 'weight' | 'style' | 'none'
text-emphasis = '[text-emphasis-color]'
pointer-events = 'auto' | 'none'
box-decoration-break = 'slice' | 'clone'
text-underline-position = 'auto' | 'under right' | 'under left' | 'under' | 'right' | 'left'
animation-delay = '0s' | '<time>'
font-variant = 'normal' | 'unicase' | 'titling-caps' | 'small-caps' | 'petite-caps' | 'all-small-caps' | 'all-petite-caps'
background-image = 'none' | 'url(path/file.png)' | '<repeating-gradient>' | '<radial-gradient>' | '<linear-gradient>' | '<image-function>'
tab-size = '8' | '<length>' | '<integer>'
transition = '[transition-duration]' | '[transition-timing-function]' | '[transition-delay]'
border-image = '[border-image-slice]' | '/' | '[border-image-width]' | '[border-image-width]' | '/' | '[border-image-outset]' | '[border-image-repeat]'
flex = '[flex-shrink]' | '[flex-basis]' | 'none'
border-image-width = '1' | '[ Up to four space-separated <length>'
orphans = '2' | '<integer>'
text-shadow = 'none' | '<length> <length> <length> <color>'
background = '[background-image]' | '[background-repeat]' | '[background-attachment]' | '[background-position]' | '/' | '[background-size]' | '[background-origin]' | '[background-clip]'
max-height = 'none' | '<percentage>' | '<length>'
border-top-left-radius = '0' | '<percentage>' | '<length>'
border-image-outset = '0' | '[ Up to four space-separated <length> or <number> values defining outsets for top'
color = '<color>'
border-left-width = 'medium' | 'thin' | 'thick' | '<length>'
padding-left = '0' | '<percentage>' | '<length>'
list-style = '[list-style-position]' | '[list-style-image]'
padding-top = '0' | '<percentage>' | '<length>'
opacity = '1' | '<number>'
text-emphasis-position = 'over right' | 'over left' | 'below right' | 'below left'
animation-duration = '0s' | '<time>'
table-layout = 'auto' | 'fixed'
left = 'auto' | '<percentage>' | '<length>'
caption-side = 'top' | 'bottom'
hyphens = 'manual' | 'none' | 'auto'
transform-style = 'flat' | 'preserve-3d'
font-stretch = 'normal' | 'ultra-expanded' | 'ultra-condensed' | 'semi-expanded' | 'semi-condensed' | 'extra-expanded' | 'extra-condensed' | 'expanded' | 'condensed'
border-top-style = 'none' | 'solid' | 'ridge' | 'outset' | 'inset' | 'hidden' | 'groove' | 'double' | 'dotted' | 'dashed'
flex-basis = 'auto' | '<length>'
icon = 'auto' | '[ One or more comma separated <url> values ]'
column-rule-style = 'none' | 'solid' | 'ridge' | 'outset' | 'inset' | 'hidden' | 'groove' | 'double' | 'dotted' | 'dashed'
*)

(*
Reference page:
http://dev.w3.org/csswg/css-values-3/
https://developer.mozilla.org/en-US/docs/Web/CSS

All the primitive types from the reference in order:
angle		// fine 
basic-shape	// no test they are not supported by any browser
blend-mode	// fine
color		// fine 
custom-ident	// fine
gradient	// fine 
image	 	// fine 
integer		// fine
lenght		// fine
mq-boolean	// fine
number		// fine
percentage	// fine 
position	// fine	
ratio		// fine
resolution	// fine
shape		// fine			
string		// fine, they don't handle multiple lines
time		// fine
timing-function	// fine
uri		// fine
*)

type = <' '*> (color | angle | gradient | url | ratio | resolution | shape | time | length | integer | number | percentage | timing-function | mq-boolean | blend-mode | position | string) / image / custom-ident 

string = (<'"'> #'[^"\r\n]*' <'"'>) |
       	 (<'\''> #'[^\'\r\n]*' <'\''>)

css-keyword = 'initial' | 'inherit' | 'unset' | 'default'

image = url | gradient | element

element = <'element('> <'#'> #'[0-9a-zA-Z]+' <')'>

mq-boolean = '-0' | '+0' | '1' | '0'

ratio = #'[0-9]+' <'/'> #'[0-9]+'

resolution = number unit
<unit> = 'dpi' | 'dpcm' | 'dppx'

(* basic shape *)

basic-shape = insect | polygon | circle | ellipse
shape-arg = length | percentage
shape-radius = length | percentage | 'closest-side' | 'farthest-side'
insect = <'insect'> <'('> (shape-arg |
       	 	    	   shape-arg shape-arg |
			   shape-arg shape-arg  shape-arg |
			   shape-arg shape-arg  shape-arg shape-arg)
			   ('round' border-radius)? <')'>
polygon = <'polygon'> <'('> (fill-rule separator)?  (shape-arg shape-arg)* <')'>
circle  = <'circle'> <'('> shape-radius? ('at' s position)? <')'>
ellipse = <'ellipse'> <'('> (shape-radius | shape-radius shape-radius)? ('at' position)? <')'>
fill-rule = 'nonzero' | 'evenodd' | 'inherit'
border-radius = (lp | lp lp | lp lp lp | lp lp lp lp)
	        ('/' ' '+ (lp | lp lp | lp lp lp | lp lp lp lp))?
<lp> = (length | percentage)

(* blend mode *)
blend-mode = 'normal' | 'multiply' | 'screen' | 'overlay' | 'darken' | 'lighten' | 'color-dodge' | 'color-burn' | 'hard-light' | 'soft-light' | 'difference' | 'exclusion' | 'hue' | 'saturation' | 'color' | 'luminosity'

(* shape *)
shape = shape-function <'('>
        (
      length s length s length s length <' '*> |
      length separator length separator length separator length <' '*>
        )
<')'>
<shape-function> = 'rect'

time = number ('s' | 'ms' | 'S' | 'mS' | 'Ms' | 'MS')

timing-function = cubic-bezier | steps | 'linear' | 'ease' | 'ease-in' | 'ease-out' | 'ease-in-out' | 'step-start' | 'step-end'
cubic-bezier = <'cubic-bezier'> <'('> number separator number separator number separator number  <')'>
steps = <'steps'> <'('> #'[0-9]+' (separator direction-timing)? <')'>
direction-timing = 'start' | 'end'


(* gradients  *)
(* definitely not sure about the repeting-linear-gradient *)
gradient = linear-gradient | radial-gradient | repeating-linear-gradient
linear-gradient = linear-gradient-name <'('> <' '*> ( (angle | ((<'to' ' '*>)? side-or-corner <' '*>)) separator )? color-stop (separator color-stop)*  <' '*> <')'>
linear-gradient-name = '-moz-linear-gradient' | '-webkit-linear-gradient' | '-ms-linear-gradient' | '-o-linear-gradient' | 'linear-gradient'
radial-gradient = radial-gradient-name <'('> <' '*>
				       radial-gradient-center separator
				       color-stop (separator color-stop)*
		  		       separator? <')'>
radial-gradient-center =
		       (
		       	   ('circle' | length) (<' '*> <'at'> <' '*> position)?
			 | ('ellipse' | ((length | percentage) (length | percentage)+) ) (<' '*> <'at'> <' '*> position)?
			 | (('circle' | 'ellipse') <' '*> extent-keyword) (<' '*> <'at'> <' '*> position)?
			 | extent-keyword (<' '*> <'at'> <' '*> position)?
			 )

radial-gradient-name = '-moz-radial-gradient' | 'radial-gradient'
extent-keyword = 'closest-corner' | 'closest-side' | 'farthest-corner' | 'farthest-side'
repeating-linear-gradient = repeating-linear-gradient-name
			    <'('>
			    ( (angle | (<'to '?> side-or-corner <' '>)) separator )? color-stop (separator color-stop)?
			    <')'>
repeating-linear-gradient-name = '-moz-repeating-linear-gradient' | 'repeating-linear-gradient'
side-or-corner = ('top' | 'bottom' | 'left' | 'right') (<' '> ('top' | 'bottom' | 'left' | 'right'))?
color-stop = color (<' '*> (percentage | length))?

(* position *)
position = ( pos-one-value | pos-two-value ) / pos-two-with-offset
pos-one-value = ( 'left' | 'center' | 'right' | 'top' | 'bottom' | percentage | length | <' '+> ) <' '*>
pos-two-value = ( 'left' | 'center' | 'right' | percentage | length ) <' '+> ( 'top' | 'center' | 'bottom' | percentage | length ) <' '*>
pos-two-with-offset = pos-with-offset <' '+> pos-with-offset	    
pos-with-offset = ( ('center' | ( ('left' | 'top') | ('right' | 'bottom') ) ) <' '*> ( percentage | length )? )


(* custom identifiers *)
custom-ident = #'[a-zA-Z\_\-]' #'[a-zA-Z\_]+' #'[a-zA-Z0-9\_\-\\]*'


(* color *)
color = color-keyword | 'transparent' | 'currentColor' | rgb | hsl | rgba | hsla

color-keyword = 'black' | 'silver' | 'gray' | 'white' | 'maroon' | 'red' |  'purple' | 'fuchsia' | 'green' | 'lime' | 'olive' | 'yellow' | 'navy' | 'blue' | 'teal' | 'aqua' | 'orange' | 'aliceblue' | 'antiquewhite' | 'aquamarine' | 'azure' | 'beige' | 'bisque' | 'blanchedalmond' | 'blueviolet' | 'brown' | 'burlywood' | 'cadetblue' | 'chartreuse' | 'chocolate' | 'coral' | 'cornflowerblue' | 'cornsilk' | 'crimson' | 'darkblue' | 'darkcyan' | 'darkgoldenrod' | 'darkgray' | 'darkgreen' | 'darkgrey' | 'darkkhaki' | 'darkmagenta' | 'darkolivegreen' | 'darkorange' | 'darkorchid' | 'darkred' | 'darksalmon' | 'darkseagreen' | 'darkslateblue' | 'darkslategray' | 'darkslategrey' | 'darkturquoise' | 'darkviolet' | 'deeppink' | 'deepskyblue' | 'dimgray' | 'dimgrey' | 'dodgerblue' | 'firebrick' | 'floralwhite' | 'forestgreen' | 'gainsboro' | 'ghostwhite' | 'gold' | 'goldenrod' | 'greenyellow' | 'grey' | 'honeydew' | 'hotpink' | 'indianred' | 'indigo' | 'ivory' | 'khaki' | 'lavender' | 'lavenderblush' | 'lawngreen' | 'lemonchiffon' | 'lightblue' | 'lightcoral' | 'lightcyan' | 'lightgoldenrodyellow' | 'lightgray' | 'lightgreen' | 'lightgrey' | 'lightpink' | 'lightsalmon' | 'lightseagreen' | 'lightskyblue' | 'lightslategray' | 'lightslategrey' | 'lightsteelblue' | 'lightyellow' | 'limegreen' | 'linen' | 'mediumaquamarine' | 'mediumblue' | 'mediumorchid' | 'mediumpurple' | 'mediumseagreen' | 'mediumslateblue' | 'mediumspringgreen' | 'mediumturquoise' | 'mediumvioletred' | 'midnightblue' | 'mintcream' | 'mistyrose' | 'moccasin' | 'navajowhite' | 'oldlace' | 'olivedrab' | 'orangered' | 'orchid' | 'palegoldenrod' | 'palegreen' | 'paleturquoise' | 'palevioletred' | 'papayawhip' | 'peachpuff' | 'peru' | 'pink' | 'plum' | 'powderblue' | 'rosybrown' | 'royalblue' | 'saddlebrown' | 'salmon' | 'sandybrown' | 'seagreen' | 'seashell' | 'sienna' | 'skyblue' | 'slateblue' | 'slategray' | 'slategrey' | 'snow' | 'springgreen' | 'steelblue' | 'tan' | 'thistle' | 'tomato' | 'turquoise' | 'violet' | 'wheat' | 'whitesmoke' | 'yellowgreen' | 'rebeccapurple'

rgb = hexadecimal | functional
hsl = <'hsl('> <' '*> number separator percentage separator percentage <' '*> <')'>
rgba = <'rgba('> <' '*> (integers-rgb | percentage-rgb) separator number <' '*> <')'>
hsla = <'hsla('> <' '*> number separator percentage separator percentage separator number <' '*> <')'>
functional = <'rgb('> <' '*> (integers-rgb | percentage-rgb) <' '*> <')'>
integers-rgb = integer separator integer separator integer
percentage-rgb = percentage separator percentage separator percentage
hexadecimal = '#' (#'[0-9a-fA-F]{3}' | #'[0-9a-fA-F]{6}')

(* primitive *)
url = <'url('> #'[0-9a-zA-Z\-\.\"\:\'\/]*' <')'>
length = (number ('em' | 'ex' | 'ch' | 'rem' | 'vh' | 'vw' | 'vmin' | 'vmax' | 'px' | 'mm' | 'cm' | 'in' | 'pt' | 'pc')) | '0'
angle   = number ('deg' | 'grad' | 'rad' | 'turn')
percentage = number '%'
<number>  = integer | float | only-decimal | scientific-number
scientific-number = (integer | float | only-decimal) 'e' (integer | float | only-decimal)
float = ('+'|'-')? #'[0-9]+' '.' #'[0-9]+'
only-decimal = ('+'|'-')? '.' #'[0-9]+'
integer = ('+'|'-')? #'[0-9]+'
<separator> = <' '* ',' ' '*>
<s> = <' '+>